//
//  NamesListWorker.swift
//  GitHubMessenger
//
//  Created by Gabriel Targon on 12/03/20.
//  Copyright (c) 2020 Gabriel Targon. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Foundation

protocol NamesListWorkLogic {
    func requestGitHubUserInfo(completionHandler: @escaping ([NamesList.User]?) -> Void)
}

class NamesListWorker: NamesListWorkLogic {
    private let domainUrlString = "https://api.github.com/"
    
    func requestGitHubUserInfo(completionHandler: @escaping ([NamesList.User]?) -> Void) {
        let url = URL(string: domainUrlString + "users?since=0")!
        
        let task = URLSession.shared.dataTask(with: url, completionHandler: { (data, response, error) in
            // Parse the data in the response and use it
            if let error = error {
                print("Error with fetching films: \(error)")
                return
            }
            
            guard let httpResponse = response as? HTTPURLResponse,
                  (200...299).contains(httpResponse.statusCode) else {
                print("Error with the response, unexpected status code: \(String(describing: response))")
                return
            }
            
            if let data = data,
               let wrapper = try? JSONDecoder().decode([NamesList.User].self, from: data) {
                completionHandler(wrapper)
            } else {
                completionHandler(nil)
            }
        })
        task.resume()
    }
}







