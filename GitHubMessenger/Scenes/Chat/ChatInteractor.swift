//
//  ChatInteractor.swift
//  GitHubMessenger
//
//  Created by Gabriel Targon on 12/03/20.
//  Copyright (c) 2020 Gabriel Targon. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol ChatBusinessLogic {
    func returnUserLogin() -> String
    func getMessages() -> [NSManagedObject]
    func saveMessage(request: Chat.Message.Request)
}

protocol ChatDataStore {
    var user: NamesList.User? { get set }
}

class ChatInteractor: ChatBusinessLogic, ChatDataStore {
    var presenter: ChatPresentationLogic?
    var worker: ChatWorkLogic?
    
    var user: NamesList.User?
    
    init(presenter: ChatPresentationLogic,
         worker: ChatWorkLogic) {
        self.presenter = presenter
        self.worker = worker
    }
    
    func returnUserLogin() -> String {
        guard let userSelected = user?.login else {
            return String()
        }
        
        return userSelected
    }
    
    func getMessages() -> [NSManagedObject] {
        guard let messages = worker?.getMessages() else { return [NSManagedObject]() }
        return messages
    }
    
    func saveMessage(request: Chat.Message.Request) {
        worker?.saveMessage(msg: request)
    }
}
