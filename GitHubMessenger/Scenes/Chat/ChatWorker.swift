//
//  ChatWorker.swift
//  GitHubMessenger
//
//  Created by Gabriel Targon on 12/03/20.
//  Copyright (c) 2020 Gabriel Targon. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

class ChatWorker {
    
    private var messages: [NSManagedObject] = []
    
    func saveMessage(msg: Chat.Message.Request) {
        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {
            return
        }
        
        let managedContext = appDelegate.persistentContainer.viewContext
        let entity = NSEntityDescription.entity(forEntityName: "Message", in: managedContext)!
        let messageObject = NSManagedObject(entity: entity, insertInto: managedContext)
        messageObject.setValue(msg.text, forKeyPath: "text")
        messageObject.setValue(msg.type.rawValue, forKeyPath: "type")
        messageObject.setValue(msg.date, forKeyPath: "date")
        messageObject.setValue(msg.friend, forKeyPath: "friend")
        
        do {
            try managedContext.save()
            messages.append(messageObject)
        } catch let error as NSError {
            print("Could not save. \(error), \(error.userInfo)")
        }
    }
    
    func getMessages() -> [NSManagedObject] {
        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {
            return [NSManagedObject]()
        }
        
        let managedContext = appDelegate.persistentContainer.viewContext
        let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: "Message")
        
        do {
            messages = try managedContext.fetch(fetchRequest)
            return messages
        } catch let error as NSError {
            print("Error to load CoreData: \(error)")
            return [NSManagedObject]()
        }
    }
}
